<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script type="text/javascript" src="./ccv.js"></script>
<script type="text/javascript" src="./face.js"></script>
</head>

<body>
<!--<video id="video" autoplay playsinline style="display:none"></video>-->
<video id="video" autoplay playsinline style="-webkit-transform: scaleX(-1);"></video>
<canvas id="canvas" style="display:none"></canvas>

<button id="button_camera_switch" style="position:absolute; left:15pt; top:15pt; font-size:1.4em; font-weight:bold; padding:2px 2px; background-color:#cccccc" onclick="camera_switch()">
カメラ切替え
</button>

<hr>
[debug  log]

<p>
<textarea id="mydebug" rows="20" cols="80"></textarea>
</p>

<script>
var debugmsg = "";

function mydebug(data){
    debugmsg+=data+"\n";
    $("#mydebug").text(debugmsg);         
}
</script>


<style>
  #video {
    display: block;
    _width: 100%;
  }
  #canvas {
    display: block;
    _width: 100%;
  }

.__face {
  border: 2px solid #FFF;
}

</style>
<script type="text/javascript">

var camera_switch_flag = false;
function camera_switch() {
  camera_switch_flag = ! camera_switch_flag;
  mydebug("camera_switch_flag=" + camera_switch_flag);
  set_camera();
  $("#button_camera_switch").css("background-color", (camera_switch_flag ? "yellow": "#cccccc") );
}

function set_camera() {

  navigator.mediaDevices.getUserMedia( { audio: false, video: { frameRate: { ideal: 2, max: 5 }, facingMode: (camera_switch_flag? "user" : "environment") } } )
  .then( 
    function(stream) {
//      video.src = window.URL.createObjectURL(stream);
      video.srcObject = stream;
    }
  );

}


  video = document.getElementById("video");
//  video = document.createElement("video");
  canvas = document.getElementById("canvas");
  video.width = $(window).width();


  var image = new Image();
  image.src = "./GunFace.transparent.png";


  set_camera();

  video.addEventListener("loadedmetadata",
    function(e) {

try {

  var widthRatio = video.width / video.videoWidth;
//  video.videoWidth = video.videoWidth * widthRatio;
//  video.videoHeight = video.videoHeight * widthRatio;

      canvas.width = video.videoWidth * widthRatio;
      canvas.height = video.videoHeight * widthRatio;

//      canvas.width = video.videoWidth;
//      canvas.height = video.videoHeight;

      var ctx = canvas.getContext("2d");


      (function animation() {
            ctx.drawImage(video,0,0,canvas.width,canvas.height);

            var faces = ccv.detect_objects(
              { "canvas" : ccv.pre(canvas),
                "cascade" : cascade,
                "interval" : 5,
                "min_neighbors" : 1 
              }
            );

            $('.face').remove();

            for(var i=0;i < faces.length;i++) {
//              context2.drawImage(image,comp[i].x-30,comp[i].y-30,comp[i].width+60,comp[i].height+60);
//                ctx.strokeRect(comp[i].x,comp[i].y,comp[i].width,comp[i].height);


//              image.style.cssText = 
//                 "position:absolute;"
//                +"left:"+ (video.width - (faces[i].width * 2.25) - (faces[i].x - (faces[i].width  * 0.68))) +"px;"
//                +"top:" + (faces[i].y - (faces[i].height * 0.4)) +"px;"
//                +"width:"+ (faces[i].width  * 2.25 ) +"px;"
//                +"heigh:"+ (faces[i].height * 2.25 ) +"px";
//
//              document.body.appendChild(image);


              $('<img>', {
                'class':'face',
                'src':'./GunFace.transparent.png',
                'css': {
                  'position': 'absolute',
                  'left':     (video.width - (faces[i].width * 2.25) - (faces[i].x - (faces[i].width  * 0.68))) + 'px',
                  'top':      (faces[i].y - (faces[i].height * 0.4)) + 'px',
                  'width':    (faces[i].width  * 2.25 ) + 'px',
                  'height':   (faces[i].height * 1.8 ) + 'px'
                }
              })
              .insertAfter(video);
  
//          $('<div>', {
//            'class':'face',
//            'css': {
//              'position': 'absolute',
//              'left':     faces[i].x + 'px',
//              'top':      faces[i].y + 'px',
//              'width':    faces[i].width  + 'px',
//              'height':   faces[i].height + 'px'
//            }
//          })
//          .insertAfter(video);


            }

            requestAnimationFrame(animation);

      })();

} catch (e) {
mydebug(e);
}

    }

  );

</script>
</body>
</html>
